apply plugin: 'cpp'

// START SNIPPET platforms
model {
    platforms {
        x86 {
            architecture "x86"
        }
        x64 {
            architecture "x86_64"
        }
        itanium {
            architecture "ia-64"
        }
    }
}
// END SNIPPET platforms

// START SNIPPET build-types
model {
    buildTypes {
        debug
        release
    }
}
// END SNIPPET build-types

// START SNIPPET target-platforms
model {
    components {
        hello(NativeLibrarySpec) {
            targetPlatform "x86"
            targetPlatform "x64"
        }
        main(NativeExecutableSpec) {
            targetPlatform "x86"
            targetPlatform "x64"
            sources {
                cpp.lib library: 'hello', linkage: 'static'
            }
        }
    }
}
// END SNIPPET target-platforms

// Apply arguments for debug binaries (these options are not yet set automatically)
// START SNIPPET build-type-config
binaries.all {
    if (toolChain in Gcc && buildType == buildTypes.debug) {
        cppCompiler.args "-g"
    }
    if (toolChain in VisualCpp && buildType == buildTypes.debug) {
        cppCompiler.args '/Zi'
        cppCompiler.define 'DEBUG'
        linker.args '/DEBUG'
    }
}
// END SNIPPET build-type-config

// Apply custom arguments for different target platforms
binaries.all {
    if (toolChain in Gcc && targetPlatform == platforms.x86) {
        cppCompiler.args '-O3'
    }
}

// Tasks to build all binaries for a tool chain
task gccExecutables {
    dependsOn binaries.withType(NativeExecutableBinary).matching {
        it.toolChain in Gcc
    }
}
task visualCppExecutables {
    dependsOn binaries.withType(NativeExecutableBinary).matching {
        it.toolChain in VisualCpp
    }
}
