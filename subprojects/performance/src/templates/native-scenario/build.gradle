import org.gradle.model.*

apply plugin: 'c'

model {
    components {
        <% moduleCount.times { %>
            lib${it+1}(NativeLibrarySpec)
        <% } %>
    }

    custom(CustomExtension) {
        action = { println "" }
        value = "."
    }

    tasks {
        create("extraTask1", MyTaskClass) {
            description = name
            doLast {}
        }
        create("extraTask2", MyTaskClass) {
            description = name
            doLast {}
        }
        create("extraTask3", MyTaskClass) {
            description = name
            doLast {}
        }
        create("extraTask4", MyTaskClass) {
            description = name
            doLast {}
        }
    }
    tasks {
        withType(MyTaskClass, TaskWiring)
    }
}

@Managed
interface CustomExtension {
    @Unmanaged
    Closure<?> getAction()
    void setAction(Closure<?> action)
    String getValue()
    void setValue(String value)
}

class TaskWiring extends RuleSource {
    @Mutate
    void wire(MyTaskClass task, CustomExtension custom) {
        task.doLast(custom.action)
        10.times {
            task.description += custom.value
        }
    }
}

class MyTaskClass extends DefaultTask {

    @InputFiles
    FileCollection input

    @OutputFiles
    FileCollection output

    @Input
    boolean flag

}