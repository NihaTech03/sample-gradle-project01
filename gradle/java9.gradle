/**
 * Tests tasks to allow the gradual introduction of JDK 9 support
 */
String jdkVarName = 'JAVA_9'

task java9IntegTest(type: Test) {
    include '**/*CompilerIntegrationTest*'
    excludes = [
        'InProcessGroovyCompilerIntegrationTest',
        'InProcessJavaCompilerIntegrationTest',
        'AntForkingScalaCompilerIntegrationTest',
        'AntInProcessScalaCompilerIntegrationTest',
        'ZincScalaCompilerIntegrationTest'
    ].collect { "**/*${it}*" }
}

task java9Test(type: Test) {
    excludes = [
        "JdkToolsTest",
        "JvmTest",
        "DefaultIsolatedAntBuilderTest",
        "DefaultModelSchemaStoreTest",
        "DefaultJavaToolChainTest",
        "ModelRuleExtractorTest",
        "SonarPluginTest",
        "FunctionalReleaseNotesTest",
        "StaticReleaseNotesTest",
        "AssemblerPluginTest",
        "CPluginTest",
        "CppPluginTest",
        "ObjectiveCPluginTest",
        "ObjectiveCppPluginTest",
        "ABrokenJunit3TestClass",
        "ABrokenTestClass",
        "ATestClassWhichCannotBeLoaded",
        "ATestClassWithBrokenBeforeAndAfterMethod",
        "ATestClassWithBrokenBeforeClassMethod",
        "ATestClassWithBrokenBeforeMethod",
        "ATestClassWithBrokenConstructor",
        "ATestClassWithBrokenRunner",
        "ATestClassWithRunner",
        "ATestClassWithRunnerThatBreaksAfterRuningSomeTests",
        "ATestClassWithSeveralMethods",
        "ATestClassWithUnconstructableRunner"
    ].collect { "**/*${it}*" }
}

tasks.withType(Test).matching { it.name.startsWith("java9") }.all {
    doFirst {
        jvmArgs = []
    }
    executable = "${System.getenv('JAVA_9')}/bin/java"
    reports.junitXml.destination = file("${project.testResultsDir}/$name")
    reports.html.destination = file("${project.reporting.baseDir}/$name")
}

if (!gradle.hasProperty("haveInstalledJava9Guard")) {
    gradle.taskGraph.whenReady { graph ->
        if (gradle.taskGraph.allTasks.any { it.name.startsWith("java9") }) {
            // Ideally, this would be a validate rule but it's not convenient to express this in the DSL yet
            if (!System.getenv(jdkVarName)) {
                throw new GradleException("A '$jdkVarName' environment variable, " +
                    "pointing to a java 9 JDK image, is required to run java9 tests!")
            }
        }
    }
    gradle.ext.haveInstalledJava9Guard = true
}
